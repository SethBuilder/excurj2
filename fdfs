warning: LF will be replaced by CRLF in excurj/admin.py.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in excurj/models.py.
The file will have its original line endings in your working directory.
[1mdiff --git a/excurj/admin.py b/excurj/admin.py[m
[1mindex 41f6215..f90f2e9 100644[m
[1m--- a/excurj/admin.py[m
[1m+++ b/excurj/admin.py[m
[36m@@ -1,7 +1,10 @@[m
 from django.contrib import admin[m
 from excurj.models import City, Reference, UserProfile, Request, Excursion, Offer[m
 [m
[31m-admin.site.register(City)[m
[32m+[m[32mclass CityAdmin(admin.ModelAdmin):[m
[32m+[m	[32mprepopulated_fields = {'slug':('name', 'country')}[m
[32m+[m
[32m+[m[32madmin.site.register(City, CityAdmin)[m
 admin.site.register(Reference)[m
 admin.site.register(UserProfile)[m
 admin.site.register(Request)[m
[36m@@ -9,3 +12,6 @@[m [madmin.site.register(Excursion)[m
 admin.site.register(Offer)[m
 [m
 [m
[41m+[m
[41m+[m
[41m+[m
[1mdiff --git a/excurj/models.py b/excurj/models.py[m
[1mindex ee2af2a..a7fc319 100644[m
[1m--- a/excurj/models.py[m
[1m+++ b/excurj/models.py[m
[36m@@ -8,6 +8,7 @@[m [mclass City(models.Model):[m
 	country = models.CharField(max_length=128)[m
 	description = models.CharField(max_length=1000, blank=True)[m
 	city_image = models.ImageField(blank=True, upload_to='city_pictures')[m
[32m+[m	[32mslug = models.SlugField(unique=True)[m
 [m
 	class Meta:[m
 		verbose_name_plural = 'Cities'[m
[36m@@ -15,6 +16,10 @@[m [mclass City(models.Model):[m
 	def __str__(self):[m
 		return self.name[m
 [m
[32m+[m	[32mdef save(self, *args, **kwargs):[m
[32m+[m		[32mself.slug = slugify(self.name + " " + self.country)[m
[32m+[m		[32msuper(City, self).save(*args, **kwargs)[m
[32m+[m
 class Reference(models.Model):[m
 	author = models.ForeignKey(User, related_name='referencer')#can be local or traveler[m
 	referenced = models.ForeignKey(User, related_name='referencee')#can be local or traveler[m
[36m@@ -36,6 +41,9 @@[m [mclass UserProfile(models.Model):[m
 	what_will_you_show_visitors = models.CharField(max_length=1000, blank=True)[m
 	#to add more later[m
 [m
[32m+[m	[32mdef __str__(self):[m
[32m+[m		[32mreturn self.user.first_name[m
[32m+[m
 class Request(models.Model):[m
 	"""traveler requests local to take him out upon liking his profile"""[m
 	traveler = models.ForeignKey(User, related_name='traveler_requests')[m
[36m@@ -47,12 +55,13 @@[m [mclass Request(models.Model):[m
 class Excursion(models.Model):[m
 	"""traveler lists his trips so local could see them and possibly offer to take him out"""[m
 	traveler = models.ForeignKey(User, related_name='traveler_lists_excursion')[m
[31m-	message = models.CharField(max_length=500)[m
[32m+[m	[32mcity = models.ForeignKey(City, related_name='visited_city', blank=True, null=True) #Each excursion is connected to one City.[m
[32m+[m	[32mmessage = models.CharField(max_length=500)#message to all locals of that city "Hey good people of Edinburgh!"[m
 	date = models.DateField()[m
 [m
 class Offer(models.Model):[m
[31m-	""" local offers traveler to take out based on the trips listed by traveler """[m
[31m-	traveler = models.ForeignKey(User, related_name='traveler_receives_offer')[m
[32m+[m	[32m""" local offers traveler to take her out based on the trips listed by traveler """[m
[32m+[m	[32m# traveler = models.ForeignKey(User, related_name='traveler_receives_offer')#not needed since trip already has traveler[m
 	local = models.ForeignKey(User, related_name='local_offers_excursion')[m
 	message = models.CharField(max_length=500)[m
 	trip = models.ForeignKey(Excursion)[m
[1mdiff --git a/excurj/views.py b/excurj/views.py[m
[1mindex 91ea44a..51f581f 100644[m
[1m--- a/excurj/views.py[m
[1m+++ b/excurj/views.py[m
[36m@@ -1,3 +1,35 @@[m
 from django.shortcuts import render[m
[32m+[m[32mfrom django.http import HttpResponse[m
[32m+[m[32mfrom excurj.models import City, UserProfile[m
[32m+[m[32mfrom django.db.models import Count[m
[32m+[m[32mfrom django.contrib.auth.models import User[m
[32m+[m
[32m+[m
[32m+[m[32mdef index(request):[m
[32m+[m	[32m#brings back top 5 cities with the highest number of users[m
[32m+[m	[32mcity_list = City.warning: LF will be replaced by CRLF in excurj/views.py.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in excurj_proj/settings.py.
The file will have its original line endings in your working directory.
